quarkus.datasource.db-kind=mysql
quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3307/my_blog
quarkus.datasource.username=blogger
quarkus.datasource.password=travel
quarkus.hibernate-orm.database.generation = drop-and-create
#quarkus.hibernate-orm.database.generation = create
#quarkus.hibernate-orm.database.generation = update
quarkus.swagger-ui.always-include=true
quarkus.smallrye-openapi.path=/openapi
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET, POST, PUT, DELETE, OPTIONS
quarkus.http.cors.headers=Contet-Type
#quarkus.http.port=9092
#%dev.quarkus.http.port=8882

# Configuration for incoming messages (Answers from the text validation service)
mp.messaging.incoming.text-validator-response.auto.offset.reset=earliest
mp.messaging.incoming.text-validator-response.connector=smallrye-kafka
mp.messaging.incoming.text-validator-response.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.text-validator-response.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Configuration for outgoing messages (Requests to the text validation service)
#mp.messaging.outgoing.text-validator-request.topic=text-validator-request
mp.messaging.outgoing.text-validator-request.connector=smallrye-kafka
#mp.messaging.outgoing.text-validator-request.key.serializer=org.apache.kafka.common.serialization.StringSerializer
#mp.messaging.outgoing.text-validator-request.value.serializer=org.apache.kafka.common.serialization.StringSerializer
